// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  uid             String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String         @db.VarChar(100)
  email           String         @db.VarChar(100)
  profileImageUrl String
  pins            Pin[]
  boards          Board[]
  followings      UserRelation[] @relation("followings")
  followers       UserRelation[] @relation("followers")
}

model Pin {
  uid       String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  creator   User       @relation(fields: [creatorId], references: [uid])
  creatorId String     @db.Uuid
  title     String     @db.VarChar(100)
  imageUrl  String
  boards    BoardPin[]
  notes     NotePin[]
}

model Board {
  uid    String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user   User       @relation(fields: [userId], references: [uid])
  userId String     @db.Uuid
  title  String     @db.VarChar(100)
  notes  Note[]
  pins   BoardPin[]
}

model Note {
  uid         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  board       Board     @relation(fields: [boardId], references: [uid])
  boardId     String    @db.Uuid
  title       String    @db.VarChar(100)
  description String
  date        DateTime  @db.Date
  pins        NotePin[]
}

model BoardPin {
  uid     String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  board   Board  @relation(fields: [boardId], references: [uid])
  boardId String @db.Uuid
  pin     Pin    @relation(fields: [pinId], references: [uid])
  pinId   String @db.Uuid
}

model NotePin {
  uid    String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  note   Note   @relation(fields: [noteId], references: [uid])
  noteId String @db.Uuid
  pin    Pin    @relation(fields: [pinId], references: [uid])
  pinId  String @db.Uuid
}

model UserRelation {
  uid         String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  follower    User   @relation("followings", fields: [followerId], references: [uid])
  followerId  String @db.Uuid
  following   User   @relation("followers", fields: [followingId], references: [uid])
  followingId String @db.Uuid
}
